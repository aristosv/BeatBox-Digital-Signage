#!/bin/bash

echo ===============================================================================================
echo This function uses your gmail account to send you alerts if cpu/memory/disk/temp are too high
echo To allow outgoing emails from your gmail account perform the following steps before continuing
echo -----------------------------------------------------------------------------------------------
echo 1. visit https://myaccount.google.com/lesssecureapps to allow less secure apps
echo 2. visit https://accounts.google.com/DisplayUnlockCaptcha to allow access to your email account
echo ===============================================================================================
read -p "press enter to continue"

echo gmail username: ; read gmailusername
echo gmail password: ; read gmailpassword
echo email to send alerts: ; read emailaddress

install_ssmtp () {
sudo apt install -y ssmtp > /dev/null 2>&1
}

configure_ssmtp () {
 sudo truncate -s 0 /etc/ssmtp/ssmtp.conf
 echo "AuthUser=$gmailusername" | sudo tee -a /etc/ssmtp/ssmtp.conf > /dev/null
 echo "AuthPass=$gmailpassword" | sudo tee -a /etc/ssmtp/ssmtp.conf > /dev/null
 echo "mailhub=smtp.gmail.com:587" | sudo tee -a /etc/ssmtp/ssmtp.conf > /dev/null
 echo 'UseSTARTTLS=YES' | sudo tee -a /etc/ssmtp/ssmtp.conf > /dev/null
}

function_monitor ()
{
sudo bash -c "cat > /etc/systemd/system/cpumonitor.service" << EOL
[Unit]
Description=cpu monitor
After=network.target

[Service]
ExecStart=/bin/bash -c "while true; do if [ $(top -b -n1 | grep Cpu | awk '{print $2 + $4}' | awk '{print int($1+0.5)}') -gt 90 ]; then { echo Subject: CPU Alert - $HOSTNAME; echo CPU Usage on $HOSTNAME is $(top -b -n1 | grep Cpu | awk '{print $2 + $4}' | awk '{print int($1+0.5)}')%; } | ssmtp $emailaddress; fi; sleep 60; done"
Restart=always

[Install]
WantedBy=multi-user.target
EOL

sudo bash -c "cat > /etc/systemd/system/diskmonitor.service" << EOL
[Unit]
Description=disk monitor
After=network.target

[Service]
ExecStart=/bin/bash -c "while true; do if [ $(df --output=pcent / | sed '1d;s/^ //;s/%//') -gt 90 ]; then { echo Subject: Disk Alert - $HOSTNAME; echo Disk Usage on $HOSTNAME is $(df --output=pcent / | sed '1d;s/^ //;s/%//')%; } | ssmtp $emailaddress; fi; sleep 60; done"
Restart=always

[Install]
WantedBy=multi-user.target
EOL

sudo bash -c "cat > /etc/systemd/system/memorymonitor.service" << EOL
[Unit]
Description=memory monitor
After=network.target

[Service]
ExecStart=/bin/bash -c "while true; do if [ $(free | grep Mem | awk '{print $3/$2 * 100.0}' | awk '{print int($1+0.5)}') -gt 90 ]; then { echo Subject: Memory Alert - $HOSTNAME; echo Memory Usage on $HOSTNAME is $(free | grep Mem | awk '{print $3/$2 * 100.0}' | awk '{print int($1+0.5)}')%; } | ssmtp $emailaddress; fi; sleep 60; done"
Restart=always

[Install]
WantedBy=multi-user.target
EOL

sudo bash -c "cat > /etc/systemd/system/temperaturemonitor.service" << EOL
[Unit]
Description=temperature monitor
After=network.target

[Service]
ExecStart=/bin/bash -c "while true; do if [ $(sudo /usr/bin/vcgencmd measure_temp | sed -e 's/temp=//' | sed -e "s/[.].*//") -gt 90 ]; then { echo Subject: Temperature Alert - $HOSTNAME; echo Temperature on $HOSTNAME is $(sudo /usr/bin/vcgencmd measure_temp | sed -e 's/temp=//' | sed -e "s/[.].*//"); } | ssmtp $emailaddress; fi; sleep 60; done"
Restart=always

[Install]
WantedBy=multi-user.target
EOL

sudo systemctl daemon-reload
sudo systemctl start cpumonitor.service
sudo systemctl start diskmonitor.service
sudo systemctl start memorymonitor.service
sudo systemctl start temperaturemonitor.service

sudo systemctl enable cpumonitor.service > /dev/null 2>&1
sudo systemctl enable diskmonitor.service > /dev/null 2>&1
sudo systemctl enable memorymonitor.service > /dev/null 2>&1
sudo systemctl enable temperaturemonitor.service > /dev/null 2>&1
}

echo installing ssmtp ; install_ssmtp
echo configuring ssmtp ; configure_ssmtp
echo enabling monitoring services ; function_monitor
